@import (reference) './color';
@import (reference) './size';

.define-kf-btn() {
  @colorLen: length(@colors);

  .color(@i: 1) when (@i <= @colorLen) {
    @c: extract(@colors, @i);

    .kf-btn.kf-@{c} {
      background-color: @@c;
      color: white;
      &:focus {
        background-color: darken(@@c, 10%);
      }
    }
    .kf-btn-group.kf-@{c} > .kf-btn {
      border-left: 1px solid darken(@@c, 10%);
      background-color: @@c;
      color: white;
      &:focus {
        background-color: darken(@@c, 10%);
      }
    }

    .color(@i + 1);
  }

  @sizeLen: length(@sizes);
  .size(@i: 1) when (@i <= @sizeLen) {
    @s: extract(@sizes, @i);
    @vpad: extract(@vpads, @i);
    @hpad: extract(@hpads, @i);
    @br: extract(@brs, @i);
    @fs: extract(@fss, @i);

    .kf-btn.kf-@{s} {
      padding: @@vpad @@hpad;
      font-size: @@fs;
      border-radius: @@br;
    }
    .kf-btn-group.kf-@{s} > .kf-btn {
      padding: @@vpad @@hpad;
      font-size: @@fs;

      &:first-child {
        border-top-left-radius: @@br;
        border-bottom-left-radius: @@br;
      }
      &:last-child {
        border-top-right-radius: @@br;
        border-bottom-right-radius: @@br;
      }
    }

    .size(@i + 1);
  }

  .size();
  .color();
}

:global {
  .kf-btn {
    display: inline-block;
    border: 1px solid transparent;
    vertical-align: middle;
    text-align: center;
    white-space: nowrap;
    line-height: 1;
  }

  .kf-btn-group {
    display: inline-block;
    > .kf-btn {
      border-radius: 0;
      &:first-child {
        border-left: none !important;
      }
    }
  }

  .define-kf-btn();
}
